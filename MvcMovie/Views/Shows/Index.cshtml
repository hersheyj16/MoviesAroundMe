@model IEnumerable<MvcMovie.Models.Show>

@{
    ViewData["Title"] = "All Shows";
}

<h2>All Shows</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Theatre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShowTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Movie.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Theatre.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShowTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
}

@foreach (var item in Model)
{
    List<MvcMovie.Models.Show> newList = new List<MvcMovie.Models.Show> ();
    if (newList.Contains(item))
    {
        <h1>
            @Html.DisplayFor(modelItem => item.Theatre.name)
        </h1>
    }
    else
    {
        <p>
            @Html.DisplayFor(modelItem => item.Theatre.name)
        </p>

        newList.Add(item);
    }
}